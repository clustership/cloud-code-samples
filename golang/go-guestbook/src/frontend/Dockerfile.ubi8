# Use base golang image from Docker Hub
FROM registry.redhat.io/ubi8/go-toolset as build

RUN mkdir -p /opt/app-root/src
WORKDIR /opt/app-root/src

# Copy the go.mod and go.sum, download the dependencies
COPY go.mod go.sum ./
RUN go mod download

# Copy rest of the application source code
COPY . ./

# Compile the application to /app/frontend.
# Skaffold passes in debug-oriented compiler flags
# ARG SKAFFOLD_GO_GCFLAGS
#RUN echo "Go gcflags: ${SKAFFOLD_GO_GCFLAGS}"
#RUN go build -gcflags="${SKAFFOLD_GO_GCFLAGS}" -mod=readonly -v -o /opt/app-root/src/frontend .
RUN go build -mod=readonly -v -o /opt/app-root/src/frontend .

# Now create separate deployment image
FROM registry.redhat.io/ubi8

# Definition of this variable is used by 'skaffold debug' to identify a golang binary.
# Default behavior - a failure prints a stack trace for the current goroutine.
# See https://golang.org/pkg/runtime/
ENV GOTRACEBACK=single

WORKDIR .
COPY static ./static
COPY templates ./templates
COPY --from=build /opt/app-root/src/frontend ./frontend
ENTRYPOINT ["./frontend"]
