apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-guestbook-backend
spec:
  template:
    spec:
      initContainers:
      - args:
        - sh
        - -c
        - cat /initenv/db_creds.env | envsubst > /env/db_creds.env
        image: bhgedigital/envsubst
        name: envsubst
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MONGODB_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret-config
              key: admin-password
        - name: MONGODB_DATABASE
          valueFrom:
            secretKeyRef:
              name: database-secret-config
              key: dbname
        - name: MONGODB_USER
          valueFrom:
            secretKeyRef:
              name: database-secret-config
              key: username
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret-config
              key: password
        volumeMounts:
        - name: mongodb-initenv
          mountPath: /initenv/db_creds.env
          subPath: "db_creds.env"
        - name: mongodb-env
          mountPath: /env
      - name: init-db-ready
        image: mongo:4
        command: 
        - /bin/sh
        - -c
        args:
        - echo "Loading env vars" ;
          . /env/db_creds.env ;
          echo "Waiting for mongodb at ${GUESTBOOK_DB_ADDR} to go live before the BE..."; 
          until (mongo "mongodb://${GUESTBOOK_DB_ADDR}" --eval "quit()" >/dev/null) do echo "Waiting for connection for 2 sec."; sleep 2; done
        volumeMounts:
        - name: mongodb-env
          mountPath: /env
      containers:
      - name: backend
        command:
        - /bin/sh
        - -c
        args:
        - . /env/db_creds.env ; ./backend
        image: guestbook-backend
        ports:
        - name: http-server
          containerPort: 8080
        - name: debug
          containerPort: 3000
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        env:
        - name: PORT
          value: "8080"
        - name: GUESTBOOK_DB_ADDR
          value: go-guestbook-mongodb:27017
          $patch: delete
        volumeMounts:
        - name: mongodb-env
          mountPath: /env
      volumes:
      - name: mongodb-env
        emptyDir: {}
      - name: mongodb-initenv
        configMap:
          name: db-creds
